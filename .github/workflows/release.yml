jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}
    steps:
      - if: ${{ matrix.os == 'windows-2019' }}
        uses: actions/cache@v2
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - if: ${{ matrix.os == 'macos-12' }}
        uses: actions/cache@v2
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          architecture: x64
          python-version: ${{ matrix.python-version }}
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "11.0.20+8" # The JDK version to make available on the path.
          java-package: jdk
          architecture: x64
      - run: |
          pip install --upgrade pip setuptools wheel
          pip install numpy==1.23.1 matplotlib==3.1.3
          pip install pyinstaller==4.10
          git clone --branch 4.2.x https://github.com/CellProfiler/distribution.git 
      # this is a separate step because we need to set the CPPFLAGS and LDFLAGS env variables *after* installing mysql, in the next step
      - if: ${{ matrix.os == 'macos-12' }}
        run: |
          brew install mysql@8.0
          # needed for mysql@8.0
          # must be run PRIOR to the step its accessed
          # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#adding-a-system-path
          echo "/usr/local/opt/mysql@8.0/bin" >> $GITHUB_PATH
      - env:
          CERTIFICATE_OSX_APPLICATION: ${{ secrets.BUILD_CERTIFICATE_BASE64_CIMINI }}
          CERTIFICATE_PASSWORD: ${{ secrets.P12_PASSWORD_CIMINI }}
          # needed for mysql@8.0
          CPPFLAGS: -I/usr/local/opt/mysql@8.0/include
          LDFLAGS: "-L/usr/local/opt/mysql@8.0/lib -L/usr/local/opt/openssl/lib"
          PKG_CONFIG_PATH: /usr/local/opt/mysql@8.0/lib/pkgconfig
        if: ${{ matrix.os == 'macos-12' }}
        working-directory: ./distribution/macos
        run: |
          echo $PATH
          sed -i '' 's/4.0.0/4.2.8/' Info.plist
          make
          chmod +x add-osx-certificate.sh && ./add-osx-certificate.sh
          chmod +x osx-codesign.sh && ./osx-codesign.sh
          ditto -ck --keepParent --rsrc --sequesterRsrc ./dist/CellProfiler.app ./dist/CellProfiler-macOS-4.2.8.zip
      - env:
          JDK_HOME: C:\hostedtoolcache\windows\Java_Temurin-Hotspot_jdk\11.0.20-8\x64
        if: ${{ matrix.os == 'windows-2019' }}
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install cython
          pip install mysqlclient==1.4.6
          pip install wxPython==4.1.0
          pip install --editable .
      - if: ${{ matrix.os == 'windows-2019' }}
        run: |
          pyinstaller distribution/windows/cellprofiler.spec
          iscc /dMyAppVersion="4.2.8" "distribution/windows/cellprofiler.iss"
      - if: ${{ matrix.os == 'macos-12' }}
        uses: actions/upload-artifact@v3
        with:
          name: CellProfiler-macOS-4.2.8.zip
          path: ./distribution/macos/dist/CellProfiler-macOS-4.2.8.zip
      - if: ${{ matrix.os == 'windows-2019' }}
        uses: actions/upload-artifact@v3
        with:
          name: CellProfiler-Windows-4.2.8.exe
          path: ./distribution/windows/Output/CellProfiler-Windows-4.2.8.exe
    strategy:
      matrix:
        os: [macos-12, windows-2019]
        python-version: ["3.8"]
      fail-fast: false
  upload:
    name: upload
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v3
        with:
          name: CellProfiler-macOS-4.2.8.zip
          path: ./
      - uses: actions/download-artifact@v3
        with:
          name: CellProfiler-Windows-4.2.8.exe
          path: ./
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: create_upload_release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          prerelease: true
          name: v4.2.8
          files: |
            /home/runner/work/CellProfiler/CellProfiler/CellProfiler-macOS-4.2.8.zip
            /home/runner/work/CellProfiler/CellProfiler/CellProfiler-Windows-4.2.8.exe
      # artifacts attached to the action no long necessary
      # since they have been uploaded to releases
      - uses: geekyeggo/delete-artifact@v4
        id: delete-artifacts
        with:
          name: |
            CellProfiler-macOS-4.2.8.zip
            CellProfiler-Windows-4.2.8.exe
name: create-release
on:
  push:
    tags:
      - "v*"
