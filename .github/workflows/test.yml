name: Run tests
jobs:
  test-cp:
    name: Install and test Cellprofiler
    strategy:
      matrix:
        os: [macos-11]
        python-version: [ 3.8, 3.9 ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    if: github.event.pull_request.draft == false
    env:
      CP_MYSQL_TEST_HOST: "127.0.0.1"
      CP_MYSQL_TEST_DB: "cellprofiler_test"
      CP_MYSQL_TEST_USER: "root"
      CP_MYSQL_TEST_PASSWORD: "None"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          architecture: x64
          python-version: ${{ matrix.python-version }}
      - name: Get pip cache dir
        id: pip-cache-dir
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: Cache pip
        uses: actions/cache@v3
        id: cache-pip
        with:
          path: ${{ steps.pip-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('**/setup.py') }}
      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: '14.0.1' # The JDK version to make available on the path.
          java-package: jdk
          architecture: x64
      - name: Mac - Install and setup mysql
        if: startsWith(matrix.os, 'macos')
        env:
          LC_ALL: "en_US.UTF-8"
        run: |
          brew install mysql
          mysql.server start
          mysql --host=$CP_MYSQL_TEST_HOST --user=$CP_MYSQL_TEST_USER --execute="CREATE DATABASE $CP_MYSQL_TEST_DB;" --skip-password
      - name: Install cellprofiler
        working-directory: ${{ github.workspace }}
        run: |
          python -m pip install --upgrade pip
          pip install -e src/subpackages/library
          pip install -e src/subpackages/core
          pip install -e src/frontend[test]
      - name: Run tests
        run: |
          pytest ${{ github.workspace }}/tests/frontend

  test-core:
    name: Install and test Core
    strategy:
      max-parallel: 4
      matrix:
        os: [macos-11]
        python-version: [ 3.8, 3.9 ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    if: github.event.pull_request.draft == false
    env:
      CP_MYSQL_TEST_HOST: "127.0.0.1"
      CP_MYSQL_TEST_DB: "cellprofiler_test"
      CP_MYSQL_TEST_USER: "root"
      CP_MYSQL_TEST_PASSWORD: "None"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          architecture: x64
          python-version: ${{ matrix.python-version }}
      - name: Get pip cache dir
        id: pip-cache-dir
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: Cache pip
        uses: actions/cache@v3
        id: cache-pip
        with:
          path: ${{ steps.pip-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('**/setup.py') }}
      - name: Install java
        uses: actions/setup-java@v1
        with:
          java-version: '14.0.1' # The JDK version to make available on the path.
          java-package: jdk
          architecture: x64
      - name: Mac - Install and setup mysql
        if: startsWith(matrix.os, 'macos')
        env:
          LC_ALL: "en_US.UTF-8"
        run: |
          brew install mysql
          mysql.server start
          mysql --host=$CP_MYSQL_TEST_HOST --user=$CP_MYSQL_TEST_USER --execute="CREATE DATABASE $CP_MYSQL_TEST_DB;" --skip-password
      - name: Install core
        working-directory: ${{ github.workspace }}
        run:
          |
          python -m pip install --upgrade pip
          pip install -e src/subpackages/library
          pip install -e src/subpackages/core[test]
      - name: Run Tests
        run: |
          pytest -k 'not test_load_objects and not test_load_single_object' ${{ github.workspace }}/tests/core

  test-library:
    name: Install and test Library
    strategy:
      max-parallel: 4
      matrix:
        os: [macos-11]
        python-version: [ 3.8, 3.9 ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          architecture: x64
          python-version: ${{ matrix.python-version }}
      - name: Get pip cache dir
        id: pip-cache-dir
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: Cache pip
        uses: actions/cache@v3
        id: cache-pip
        with:
          path: ${{ steps.pip-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('**/setup.py') }}
      - name: Install library
        working-directory: ${{ github.workspace }}
        run:
          |
          python -m pip install --upgrade pip
          pip install -e src/subpackages/library[test]
      - name: Run Tests
        run: |
          pytest ${{ github.workspace }}/tests/library

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review, review_requested]
  push:
    branches:
      - 'main'
  workflow_dispatch:
