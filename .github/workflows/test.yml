jobs:
  build:
    name: build
    strategy:
      matrix:
        os: [macos-10.15]
        python-version: [ 3.8 ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          architecture: x64
          python-version: ${{ matrix.python-version }}
      - name: Get pip cache dir
        id: pip-cache-dir
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: Cache pip
        uses: actions/cache@v3
        id: cache-pip
        with:
          path: ${{ steps.pip-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
      - uses: actions/setup-java@v1
        with:
          java-version: '14.0.1' # The JDK version to make available on the path.
          java-package: jdk
          architecture: x64
      - run: |
          pip install pyinstaller
          pip install --upgrade pip setuptools wheel
          pip install numpy>=1.20.1
          git clone https://github.com/CellProfiler/python-javabridge.git ~/python-javabridge
          git clone https://github.com/CellProfiler/python-bioformats.git ~/python-bioformats
          git clone https://github.com/CellProfiler/centrosome.git ~/centrosome
          git clone https://github.com/CellProfiler/core.git ~/core
          # git clone https://github.com/CellProfiler/CellProfiler.git ~/cellprofiler
      - env:
          PATH: $PATH:/home/ubuntu/.local/bin
        if: startsWith(runner.os, 'Linux')
        run: |
          sudo apt install -y make gcc build-essential libgtk-3-dev
          sudo apt-get install -y default-libmysqlclient-dev libnotify-dev libsdl2-dev
      - env:
          LC_ALL: "en_US.UTF-8"
          CP_MYSQL_TEST_HOST: "127.0.0.1"
          CP_MYSQL_TEST_USER: "root"
          CP_MYSQL_TEST_PASSWORD: ""
        if: ${{ matrix.os == 'macos-10.15' }}
        run: |
          brew install mysql
          mysql.server start
          mysql -h 127.0.0.1 -u root -p "" -e "CREATE DATABASE cellprofiler_test;"
      - run: |
          pip install -e ~/python-javabridge
          pip install -e ~/python-bioformats
          pip install -e ~/centrosome
          pip install -e ~/core
          pip install -e .[test]
      - name: Test
        run: pytest
name: run-cp-tests
on: [workflow_dispatch]
